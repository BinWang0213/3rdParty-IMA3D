import numpy as np

def Image2VTK(fname,img_numpy):
    """ Convert 3D image into binary vtk with unsigned char

    # This is basically used for input data of image skeleton tools Alexandru C. Telea, http://www.staff.science.uu.nl/~telea001/
    # https://github.com/Forceflow/cuda_voxelizer, https://www.patrickmin.com/binvox/
    
    *.vtk format
    ---------
    # vtk DataFile Version 3.0
    generated by [binvox], http://www.google.com/search?q=binvox
    BINARY
    DATASET STRUCTURED_POINTS
    DIMENSIONS 200 200 200
    ORIGIN 0 0 0
    SPACING 1 1 1
    POINT_DATA 8000000
    SCALARS voxel_data unsigned_char
    LOOKUP_TABLE default
    [binary raw image data.....]

    Author:Bin Wang(binwang.0213@gmail.com)
    Date: Jan. 2020
    """
    header=b""
    header+=b"# vtk DataFile Version 3.0\n"
    header+=b"Generated by PyGeoMesh\n"
    header+=b"BINARY\n"
    header+=b"DATASET STRUCTURED_POINTS\n"
    header+=b"DIMENSIONS %d %d %d\n" % (img_numpy.shape[0],img_numpy.shape[1],img_numpy.shape[2])
    header+=b"ORIGIN 0 0 0\n" 
    header+=b"SPACING 1 1 1\n" 
    header+=b"POINT_DATA %d\n" %(img_numpy.shape[0]*img_numpy.shape[1]*img_numpy.shape[2]) 
    header+=b"SCALARS voxel_data unsigned_char\n"
    header+=b"LOOKUP_TABLE default\n"
    with open(fname,'wb') as f:
        f.write(header)
        f.write(img_numpy.flatten(order="F").tobytes())